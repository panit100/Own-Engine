# name: Test project

# on: workflow_dispatch: {}

# jobs:
#   testAllModes:
#     name: Run Tests
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         projectPath:
#           - .
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           lfs: true

#       - uses: actions/cache@v3
#         with:
#           path: ${{ matrix.projectPath }}/Library
#           key: Library-${{ matrix.projectPath }}
#           restore-keys: |
#             Library-

#       - name: Run Test
#         uses: game-ci/unity-test-runner@v3
#         id: tests
#         env:
#           UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#           UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#           UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
#           UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
#         with:
#           projectPath: ${{ matrix.projectPath }}
#           githubToken: ${{ secrets.GITHUB_TOKEN }}

#       - uses: actions/upload-artifact@v2
#         if: always()
#         with:
#           name: Test results
#           path: artifacts


name: Build project

on: 
  workflow_dispatch: {}

jobs:
  testAllModes:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - .
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-

      - name: Run Test
        uses: game-ci/unity-test-runner@v3
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          projectPath: ${{ matrix.projectPath }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - uses: game-ci/unity-builder@v3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          allowDirtyBuild: true
          targetPlatform: StandaloneWindows64

      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build

      - name: Return license
        uses: game-ci/unity-return-license@v2
        if: always()