name: Test project

on: 
  [push]

jobs:
  testAllModes:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - .
        testMode:
          - playmode
          - editmode
          - standalone
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-
      - uses: game-ci/unity-test-runner@v3
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}


# à¸·name: Build Project
# on: 
#   workflow_dispatch: {}
# jobs:
#   testAllModes:
#     name: Run Tests
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         projectPath:
#           - .
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           lfs: true

#       - uses: actions/cache@v3
#         with:
#           path: ${{ matrix.projectPath }}/Library
#           key: Library-${{ matrix.projectPath }}
#           restore-keys: |
#             Library-

#       - name: Run Test
#         uses: game-ci/unity-test-runner@v3
#         id: tests
#         env:
#           UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#           UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
#           UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
#         with:
#           projectPath: ${{ matrix.projectPath }}
#           githubToken: ${{ secrets.GITHUB_TOKEN }}

#       - uses: actions/upload-artifact@v2
#         if: always()
#         with:
#           name: Test results
#           path: artifacts

